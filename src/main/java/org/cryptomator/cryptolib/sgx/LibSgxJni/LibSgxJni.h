/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include "sgx_eid.h"
#include "sgx_urts.h"
#include "Enclave_u.h" // Gerado pelo Edger8r

#if defined(_MSC_VER)
#include <intrin.h>
#endif
/* Header for class org_cryptomator_cryptolib_sgx_SgxJNI */

#ifndef _SGX_LIB
#define _SGX_LIB

#ifdef __cplusplus
extern "C" {
#endif

typedef uint8_t byte;

#define ENCLAVE_FILENAME "enclave.signed.so"
static short SGX_STATUS = 2;//0 indisponível, 1 disponível, 2 não verificado

static __inline void native_cpuid(unsigned int *eax, unsigned int *ebx, unsigned int *ecx, unsigned int *edx);

/*
 * Class:     org_cryptomator_cryptolib_sgx_SgxJNI
 * Method:    jni_sgx_is_enabled
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_org_cryptomator_cryptolib_sgx_SgxJNI_jni_1sgx_1is_1enabled
  (JNIEnv *env, jobject obj);

/*
 * Class:     org_cryptomator_cryptolib_sgx_SgxJNI
 * Method:    jni_initialize_enclave
 * Signature: (Ljava/lang/Object;)S
 */
JNIEXPORT jint JNICALL Java_org_cryptomator_cryptolib_sgx_SgxJNI_jni_1initialize_1enclave
  (JNIEnv *env, jobject obj);

/*
 * Class:     org_cryptomator_cryptolib_sgx_SgxJNI
 * Method:    jni_sgx_seal_data
 * Signature: (J[BI)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_cryptomator_cryptolib_sgx_SgxJNI_jni_1sgx_1seal_1data
  (JNIEnv *env, jobject obj, jlong enclave_id, jbyteArray data_in, jlong data_size);

/*
 * Class:     org_cryptomator_cryptolib_sgx_SgxJNI
 * Method:    jni_sgx_unseal_data
 * Signature: (J[BI)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_cryptomator_cryptolib_sgx_SgxJNI_jni_1sgx_1unseal_1data
  (JNIEnv *env, jobject obj, jlong enclave_id, jbyteArray data_in, jlong data_size);

/*
 * Class:     org_cryptomator_cryptolib_sgx_SgxJNI
 * Method:    jni_sgx_destroy_enclave
 * Signature: (J)S
 */
JNIEXPORT jint JNICALL Java_org_cryptomator_cryptolib_sgx_SgxJNI_jni_1sgx_1destroy_1enclave
  (JNIEnv *env, jobject obj, jlong enclave_id);

#ifdef __cplusplus
}
#endif
#endif
